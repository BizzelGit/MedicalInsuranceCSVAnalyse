class ChargeDetailStatisticsMax:
    def __init__(self, age, sex, bmi, children, smoker, region, charges):
        """
        Initialisiert die Klasse mit Listen von Alterswerten, Geschlechtern, BMI, Kindern,
        Raucherstatus, Regionen und Charges.
        
        :param age: Liste der Alterswerte.
        :param sex: Liste der Geschlechter ("male", "female").
        :param bmi: Liste der BMI-Werte.
        :param children: Liste der Anzahl der Kinder.
        :param smoker: Liste des Raucherstatus.
        :param region: Liste der Regionen.
        :param charges: Liste der Charge-Werte.
        """
        self.age = age
        self.sex = sex
        self.bmi = bmi
        self.children = children
        self.smoker = smoker
        self.region = region
        self.charges = charges

    def calculate_max_chargedetail(self):
        """
        Berechnet den maximalen Wert der Charges und gibt alle Datensätze zurück,
        die diesen maximalen Wert haben.

        :return: Ein Dictionary mit allen Datensätzen, die den maximalen 'charges' Wert haben.
        """
        max_chargedetail = max(self.charges)  # Maximalwert der Charges ermitteln
        max_chargedetail_indices = [index for index, value in enumerate(self.charges) if value == max_chargedetail]

        # Überprüfen, ob es Indizes gibt
        if not max_chargedetail_indices:
            print("Keine Datensätze mit dem maximalen Charge-Wert gefunden.")
            return None, []

        # Alle Datensätze mit dem maximalen 'charges' Wert
        max_chargechargedetail_records = []
        for index in max_chargedetail_indices:
            # Sicherstellen, dass der Index gültig ist
            if index < len(self.age):
                record = {
                    'age': self.age[index],
                    'sex': self.sex[index],
                    'bmi': self.bmi[index],
                    'children': self.children[index],
                    'smoker': self.smoker[index],
                    'region': self.region[index],
                    'charges': self.charges[index]
                }
                max_chargechargedetail_records.append(record)

        return max_chargedetail, max_chargechargedetail_records


# Beispielwerte (diese Werte sollten deine echten Daten ersetzen)
age = [25.5, 30.0, 22.0, 27.5, 30.0, 35.0, 30.0]
sex = ['female', 'male', 'female', 'male', 'female', 'male', 'female']
bmi = [22.5, 30.0, 26.5, 28.0, 32.0, 24.0, 25.0]
children = [0, 1, 2, 0, 3, 2, 1]
smoker = ['no', 'yes', 'no', 'no', 'yes', 'yes', 'no']
region = ['north', 'south', 'north', 'east', 'west', 'south', 'north']
charges = [12000, 22000, 13000, 18000, 22000, 24000, 22000]

# Eine Instanz der Klasse erstellen
chargedetail_stats = ChargeDetailStatistics(age, sex, bmi, children, smoker, region, charges)

# Berechnungen durchführen
max_chargedetail, max_chargedetail_records = chargedetail_stats.calculate_max_chargedetail()

# Ergebnisse ausgeben
if max_chargedetail is not None:
    print(f"Maximaler Charge-Wert: {max_chargedetail}")
    print("Datensätze mit maximalem Charge-Wert:")
    for record in max_chargedetail_records:
        print(record)
